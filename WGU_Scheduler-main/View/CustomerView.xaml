<UserControl
    x:Class="Scheduler.View.CustomerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Scheduler"
    xmlns:ViewModel="clr-namespace:Scheduler.ViewModel"
    xmlns:Validation="clr-namespace:Scheduler.Validation"
    mc:Ignorable="d"
    d:DesignWidth="1000" Height="550">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:CallMethodAction TargetObject="{Binding}" MethodName="LoadCustomers"/>
            <i:CallMethodAction TargetObject="{Binding}" MethodName="LoadAddresses"/>
            <i:CallMethodAction TargetObject="{Binding}" MethodName="LoadCities"/>
            <i:CallMethodAction TargetObject="{Binding}" MethodName="LoadCountries"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <Style TargetType="TextBox">
            <Setter Property="BorderBrush" Value="AliceBlue" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Height" Value="20" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="Margin" Value="1"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                            Value="{Binding RelativeSource={x:Static RelativeSource.Self},
                            Path=(Validation.Errors)/ErrorContent}"/>
                    <Setter Property="Background" Value="Salmon"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="WhiteSmoke">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="15"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="15"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="15"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="15"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" HorizontalAlignment="Center">
            <TextBlock Text="Customers" FontSize="30" FontWeight="Bold" Margin="5" MinHeight="40"/>
        </StackPanel>
        
        <TabControl Grid.Column="1" Grid.ColumnSpan="8" Grid.Row="2" Grid.RowSpan="5"
                    HorizontalAlignment="Left" TabStripPlacement="Left" SelectedItem="{Binding Path=TabControlSelectedItem,UpdateSourceTrigger=PropertyChanged,Mode=Twoway}">
            <TabItem Header="Customers" FontSize="20" IsSelected="{Binding CustomerTabSelected}">

                <WrapPanel Grid.Column="2" Grid.ColumnSpan="8" Grid.Row="3">
                    <StackPanel Grid.Column="1" Grid.ColumnSpan="7" Grid.Row="2">
                        <DataGrid Name="CustomersDataGrid" FontSize="12"
                          Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" 
                          Height="200" Background="AliceBlue" Margin="75,5,5,5"
                          AlternatingRowBackground="LightBlue"
                          IsReadOnly="True"
                          ItemsSource="{Binding AllCustomersLoaded}"
                          CurrentItem="{Binding SelectedCustomer, Mode=TwoWay}"
                          AutoGenerateColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Customer Id" Binding="{Binding Path=CustomerId, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Customer Name" Binding="{Binding Path=CustomerName, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Create Date" Binding="{Binding Path=CreateDate, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Created By" Binding="{Binding Path=CreatedBy, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Last Update" Binding="{Binding Path=LastUpdate, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Last Update by" Binding="{Binding Path=LastUpdateBy, Mode=TwoWay}"/>
                                <DataGridTextColumn Header="Active" Binding="{Binding Path=Active, Mode=TwoWay}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                        <StackPanel Orientation="Horizontal">
                            <Label Content="Selected Customer" FontWeight="Bold" Margin="2"/>
                            <StackPanel Orientation="Horizontal" Grid.Column="5" Grid.Row="2" Margin="200,0,0,0">
                                <Button Name="addButton" Content="Add" Command="{Binding AddCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                                <Button Name="editButton" Content="Edit" Command="{Binding EditCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                                <Button Name="deleteButton" Content="Delete" Command="{Binding DeleteCustomerCommand}" CommandParameter="{Binding SelectedCustomer}"
                Height="30" MinWidth="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Margin="10" Width="300">
                    <StackPanel Grid.Column="3" Grid.Row="4" Margin="5">
                        <TextBox Text="Name" IsEnabled="False"
                     MinWidth="50"/>
                        <TextBox Text="Address" IsEnabled="False"/>
                        <TextBox Text="Address" IsEnabled="False"/>
                        <TextBox Text="City" IsEnabled="False"/>
                        <TextBox Text="Country" IsEnabled="False"/>
                        <TextBox Text="Zip" IsEnabled="False"/>
                        <TextBox Text="Phone" IsEnabled="False"/>
                    </StackPanel>

                    <StackPanel Grid.Column="3" Grid.Row="4" Margin="5">
                        <TextBox Name="nameBox"
                     IsEnabled="{Binding EditMode, Mode=TwoWay}"
                     MinWidth="100">
                            <TextBox.Text>
                                <Binding Path="SelectedCustomer.CustomerName"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Name="addressBox_customer" IsEnabled="False">
                            <TextBox.Text>
                                    <Binding Path="SelectedAddress.Address1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Name="addressBox2_customer" Text="{Binding SelectedCustomer.Address.Address2, Mode=OneWay}" IsEnabled="False"/>
                        <TextBox Name="cityBox_customer" IsEnabled="False" >
                            <TextBox.Text>
                                    <Binding Path="SelectedAddress.City.City1"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Name="countryBox_customer" IsEnabled="False" >
                            <TextBox.Text>
                                    <Binding Path="SelectedAddress.City.Country.Country1"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Name="zipBox_customer" IsEnabled="False" >
                            <TextBox.Text>
                                    <Binding Path="SelectedAddress.PostalCode"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                        <Validation:ValidateZipCode/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                        <TextBox Name="phoneBox_customer" IsEnabled="False" >
                            <TextBox.Text>
                                    <Binding Path="SelectedAddress.Phone"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                    <Binding.ValidationRules>
                                        <Validation:ValidateNotNullOrWhitespace/>
                                        <Validation:ValidatePhoneNumber/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>
                            <TextBox Name="AddressId" Text="{Binding SelectedAddress.AddressId, Mode=TwoWay}" Visibility="Collapsed"/>

                            <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.ColumnSpan="2" HorizontalAlignment="Center" Grid.Row="5">
                            <Button Name="saveButton" Content="Save" Command="{Binding SaveCustomerCommand}"
                    CommandParameter="{Binding SelectedCustomer}" MinWidth="40" Height="25" Margin="5">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource  {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=nameBox, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=addressBox_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=addressBox2_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=cityBox_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=countryBox_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=zipBox_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding ElementName=phoneBox_customer, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding Path=EditMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Name="cancelButton" Content="Cancel" Command="{Binding CancelCustomerCommand}"
                MinWidth="40" Height="25" Margin="5" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
                        </StackPanel>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="{Binding IsAddressEditMode, Mode=OneWay}">
                    <TextBlock Text="Address Selection" FontSize="14" FontWeight="Bold"/>
                    <ComboBox ItemsSource="{Binding AllAddresses}" FontSize="10" Margin="10" MaxHeight="50"
                              SelectedItem="{Binding SelectedAddress}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel>
                                    <TextBlock Text="{Binding Address1}"/>
                                    <TextBlock Text="{Binding City.City1}" />
                                     <TextBlock Text="{Binding City.Country.Country1}" />
                                    </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    </StackPanel>

                </WrapPanel>

            </TabItem>
            <TabItem Header="Addresses" FontSize="20" IsSelected="{Binding AddressTabSelected}">

                <WrapPanel Grid.Column="2" Grid.ColumnSpan="8" Grid.Row="3" Grid.RowSpan="3" MinHeight="400">
                    <StackPanel Grid.Column="1" Grid.Row="2" Grid.RowSpan="3" Orientation="Horizontal">

                        <StackPanel Grid.Column="1" Grid.ColumnSpan="7" Grid.Row="2">
                            <ListView ItemsSource="{Binding AllAddresses}" SelectedItem="{Binding SelectedAddressItem}" FontSize="12">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Address1}"/>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>

                            <StackPanel Orientation="Horizontal">
                                <Button Name="addButton_address" Content="Add" Command="{Binding AddAddressCommand}" CommandParameter="{Binding SelectedAddressItem}"
                                    Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}" />
                                <Button Name="editButton_address" Content="Edit" Command="{Binding EditAddressCommand}" CommandParameter="{Binding SelectedAddressItem}"
                                    Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                                <Button Name="deleteButton_address" Content="Delete" Command="{Binding DeleteAddressCommand}" CommandParameter="{Binding SelectedAddressItem}"
                                    Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                            </StackPanel>
                        </StackPanel>


                        <StackPanel>
                            <TextBlock Text="Selected" Grid.Column="3" Grid.ColumnSpan="2" HorizontalAlignment="Center" Margin="75,0,0,0"/>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel Grid.Column="3" Grid.Row="4" Margin="5">
                                    <TextBox Text="Street" IsEnabled="False"/>
                                    <TextBox Text="Apt" IsEnabled="False"/>
                                    <TextBox Text="City" IsEnabled="False"/>
                                    <TextBox Text="Country" IsEnabled="False"/>
                                    <TextBox Text="Zip" IsEnabled="False"/>
                                    <TextBox Text="Phone" IsEnabled="False"/>
                                </StackPanel>
                                <StackPanel>
                                    <TextBox Name="addressBox" IsEnabled="{Binding EditMode, Mode=OneWay}">
                                        <TextBox.Text>
                                            <Binding Path="SelectedAddressItem.Address1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                                <Binding.ValidationRules>
                                                    <Validation:ValidateNotNullOrWhitespace/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="addressBox2" Text="{Binding SelectedAddressItem.Address2}" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
                                <StackPanel Orientation="Horizontal">
                                        <TextBox Name="cityBox" IsEnabled="False" >
                                            <TextBox.Text>
                                                <Binding Path="SelectedAddressItem.City.City1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                                    <Binding.ValidationRules>
                                                        <Validation:ValidateNotNullOrWhitespace/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <ComboBox ItemsSource="{Binding AllCities}"
                                              SelectedValue="{Binding SelectedAddressItem.City, Mode=TwoWay}"
                                              IsSynchronizedWithCurrentItem="True" FontSize="12"
                                              Visibility="{Binding IsAddressEditMode}"
                                              IsEnabled="{Binding EditMode, Mode=OneWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding City1, Mode=TwoWay}" />
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                                <StackPanel Orientation="Horizontal">
                                        <TextBox Name="countryBox" IsEnabled="False" >
                                            <TextBox.Text>
                                                <Binding Path="SelectedAddressItem.City.Country.Country1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                                    <Binding.ValidationRules>
                                                        <Validation:ValidateNotNullOrWhitespace/>
                                                    </Binding.ValidationRules>
                                                </Binding>
                                            </TextBox.Text>
                                        </TextBox>
                                        <ComboBox ItemsSource="{Binding AllCountries}" 
                                              SelectedItem="{Binding SelectedAddressItem.City.Country, Mode=TwoWay}"
                                              IsSynchronizedWithCurrentItem="True" FontSize="12"
                                              Visibility="{Binding IsAddressEditMode}"
                                              IsEnabled="{Binding EditMode, Mode=OneWay}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Country1, Mode=TwoWay}"/>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>
                                    </ComboBox>
                                </StackPanel>
                                    <TextBox Name="zipBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                                        <TextBox.Text>
                                            <Binding Path="SelectedAddressItem.PostalCode"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                                <Binding.ValidationRules>
                                                    <Validation:ValidateNotNullOrWhitespace/>
                                                    <Validation:ValidateZipCode/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>
                                    <TextBox Name="phoneBox" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                                        <TextBox.Text>
                                            <Binding Path="SelectedAddressItem.Phone"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                                <Binding.ValidationRules>
                                                    <Validation:ValidateNotNullOrWhitespace/>
                                                    <Validation:ValidatePhoneNumber/>
                                                </Binding.ValidationRules>
                                            </Binding>
                                        </TextBox.Text>
                                    </TextBox>

                                    <StackPanel Orientation="Horizontal" Grid.Column="10" HorizontalAlignment="Center" Grid.Row="6" Margin="10">
                                    <Button Name="saveButton_address" Content="Save" Command="{Binding SaveAddressCommand}"
                                CommandParameter="{Binding SelectedAddressItem}" MinWidth="50" Height="30" Margin="5">
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource  {x:Type Button}}">
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Style.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding ElementName=addressBox, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=addressBox2, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=cityBox, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=countryBox, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=zipBox, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding ElementName=phoneBox, Path=(Validation.HasError)}" Value="false" />
                                                            <Condition Binding="{Binding Path=EditMode}" Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter Property="IsEnabled" Value="true" />
                                                    </MultiDataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                    </Button>
                                    <Button Name="cancelButton_address" Content="Cancel" Command="{Binding CancelAddressCommand}"
                                MinWidth="50" Height="30" Margin="5" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
                                </StackPanel>
                                    </StackPanel>
                            </StackPanel>



                        </StackPanel>
                    </StackPanel>
                </WrapPanel>

            </TabItem>
            <TabItem Header="Cities" FontSize="20" IsSelected="{Binding CityTabSelected}">

                <WrapPanel Grid.Column="2" Grid.ColumnSpan="8" Grid.Row="3" Grid.RowSpan="3" MinHeight="400">
                    <StackPanel Margin="50,0,0,0">
                        <TextBlock Text="City List" FontSize="14"/>
                        <ComboBox FontSize="12"
                                  Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" 
                                  ItemsSource="{Binding AllCities}"
                                  SelectedItem="{Binding SelectedCityItem, Mode=TwoWay}"
                                  IsSynchronizedWithCurrentItem="True">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <TextBlock Text="{Binding Path=City1}"/>
                                    </WrapPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Margin="0,50,0,0">
                            <TextBox Text="City Name" IsEnabled="False"/>
                            <TextBox Name="cityBox_City" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                                <TextBox.Text>
                                    <Binding Path="SelectedCityItem.City1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                        <Binding.ValidationRules>
                                            <Validation:ValidateNotNullOrWhitespace/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="10" HorizontalAlignment="Right" Grid.Row="6">
                            <Button Name="saveButton_City" Content="Save" Command="{Binding SaveCityCommand}"
                                CommandParameter="{Binding SelectedCityItem}" MinWidth="50" Height="30" Margin="5">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource  {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=cityBox_City, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding Path=EditMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Name="cancelButton_City" Content="Cancel" Command="{Binding CancelCityCommand}"
                                MinWidth="50" Height="30" Margin="5" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Margin="50,0,0,0">
                        <Button Name="addButton_City" Content="Add" Command="{Binding AddCityCommand}" CommandParameter="{Binding SelectedCityItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                        <Button Name="editButton_City" Content="Edit" Command="{Binding EditCityCommand}" CommandParameter="{Binding SelectedCityItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                        <Button Name="deleteButton_City" Content="Delete" Command="{Binding DeleteCityCommand}" CommandParameter="{Binding SelectedCityItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                    </StackPanel>

                </WrapPanel>

            </TabItem>
            <TabItem Header="Countries" FontSize="20" IsSelected="{Binding CountryTabSelected}">

                <WrapPanel Grid.Column="2" Grid.ColumnSpan="8" Grid.Row="3" Grid.RowSpan="3" MinHeight="400">
                    <StackPanel Margin="50,0,0,0">
                        <TextBlock Text="Country List" FontSize="14"/>
                        <ComboBox FontSize="12"
                                  Grid.Column="1" Grid.ColumnSpan="5" Grid.Row="2" 
                                  ItemsSource="{Binding AllCountries}"
                                  SelectedItem="{Binding SelectedCountryItem, Mode=TwoWay}"
                                  IsSynchronizedWithCurrentItem="True">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <WrapPanel>
                                        <TextBlock Text="{Binding Path=Country1}"/>
                                    </WrapPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <StackPanel Margin="0,50,0,0">
                            <TextBox Text="Country Name" IsEnabled="False"/>
                            <TextBox Name="countryBox_country" IsEnabled="{Binding EditMode, Mode=OneWay}" >
                                <TextBox.Text>
                                    <Binding Path="SelectedCountryItem.Country1"
                             Mode="TwoWay"
                             UpdateSourceTrigger="PropertyChanged"
                             NotifyOnValidationError="True" >
                                        <Binding.ValidationRules>
                                            <Validation:ValidateNotNullOrWhitespace/>
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                            </TextBox>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" Grid.Column="10" HorizontalAlignment="Right" Grid.Row="6">
                            <Button Name="saveButton_Country" Content="Save" Command="{Binding SaveCountryCommand}"
                                CommandParameter="{Binding SelectedCountryItem}" MinWidth="50" Height="30" Margin="5">
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource  {x:Type Button}}">
                                        <Setter Property="IsEnabled" Value="false" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=countryBox_country, Path=(Validation.HasError)}" Value="false" />
                                                    <Condition Binding="{Binding Path=EditMode}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="true" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Name="cancelButton_country" Content="Cancel" Command="{Binding CancelCountryCommand}"
                                MinWidth="50" Height="30" Margin="5" IsEnabled="{Binding EditMode, Mode=OneWay}"/>
                        </StackPanel>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="1" Margin="50,0,0,0">
                        <Button Name="addButton_country" Content="Add" Command="{Binding AddCountryCommand}" CommandParameter="{Binding SelectedCountryItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                        <Button Name="editButton_country" Content="Edit" Command="{Binding EditCountryCommand}" CommandParameter="{Binding SelectedCountryItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                        <Button Name="deleteButton_country" Content="Delete" Command="{Binding DeleteCountryCommand}" CommandParameter="{Binding SelectedCountryItem}"
                Height="30" Width="50" Margin="5" IsEnabled="{Binding ViewMode, Mode=OneWay}"/>
                    </StackPanel>

                </WrapPanel>

            </TabItem>
        </TabControl>

    </Grid>
</UserControl>